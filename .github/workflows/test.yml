name: Test

on:
  push:
    branches: [main, issue-*]
  pull_request:
    branches: [main, issue-*]

jobs:
  build:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Import GPG key used for testing
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.TEST_GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.TEST_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true

      - name: Set GPG key user as the Git global user
        run: |
          git config --global user.email "${{ steps.import-gpg.outputs.email }}"
          git config --global user.name "${{ steps.import-gpg.outputs.name }}"
          git config --global user.signingkey "${{ steps.import-gpg.outputs.keyid }}"

      - name: Setup Python
        uses: actions/setup-python@v2.3.1
        with:
          python-version: "3.9"

      - name: Setup Libvips
        run: |
          apt-get update
          apt-get upgrade -y
	        apt-get install -y libvips-dev 

      - name: Setup Poetry
        run: pip3 install poetry

      - name: Check Poetry
        run: poetry --version

      - name: Config Poetry for Cache
        if: ${{ !env.ACT }}
        run: poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        if: ${{ !env.ACT }}
        uses: actions/cache@v2.1.6
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-v0-${{ github.event.repository.name }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install via Poetry
        run: poetry install

      - name: Run Pytest Test
        run: poetry run pytest --cov
